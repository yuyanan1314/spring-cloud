logging:
  level:
    org.springframework.cloud.gateway: TRACE
    org.springframework.http.server.reactive: DEBUG
    org.springframework.web.reactive: DEBUG
    
server:
  port: ${PORT:8970}

gate-way-prefix: /api/v1 

spring:
  application:
    name: msa-gate
  jackson:
        date-format: yyyy-MM-dd HH:mm:ss
        time-zone: GMT+8
        default-property-inclusion: NON_NULL
        #限制了请求的文件大小:每个文件的配置最大为1,048,576 bytes=1M，单次请求的文件的总数不能大于10Mb
  servlet:
      multipart:
          max-file-size: 100MB
          max-request-size: 50MB
  # Redis configuration
  redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PSWD:beyondsoft}
      #默认使用db2
      database: ${REDIS_DB_NO:7}
      
      
  cloud:
    gateway:
       ### 根据注册中心自动路由
       discovery:
        locator:
          ### 开启服务中心自动根据seviceId（大写）创建路由的功能
          enabled: true
          ### 服务名无需大写
          lowerCaseServiceId: true
          ### 说明：
          ### 我们fnb旧版网关对于新加入服务的规则：忧郁使用了zuul zuul提供了stripPrefix 并且我们设置了 /api/v1/  所以最终路径为：api/v1/目标服务在注册中心的名称/目标服务的接口路径
          ### springcloud-gateway discovery默认规则：http://网关ip：网关端口/目标服务在注册中心的名称/目标服务的接口路径
          ### 为了兼容以前的规则，依据springcloud-gateway提供的RewritePath过滤器（基于spel配置） 实现此功能
          ### 对于spel并不是很熟悉，因此过程很痛苦，如需修改此处，请慎重           -yuyanan
          ### 兼容配置-------start--------
          predicates: 
          - name: Path
            args: 
              pattern: "'/api/v1/'+serviceId+'/**'"
          filters:
          - name: RewritePath
            args:
              regexp: "'/api/v1/'+serviceId+'/(?<remaining>.*)'"
              replacement: "'/${remaining}'"
          ### 兼容配置-------end--------

       ### 自定义路由
       routes:
        ### 这个路由的唯一id，不定义的话为一个uuid
        - id: cashier
          ### http请求为lb://前缀 + 服务id；
          ### ws请求为lb:ws://前缀 + 服务id；表示将请求负载到哪一个服务上
          uri: lb://FNB-CASHIER
          ### 表示这个路由的请求匹配规则，只有符合这个规则的请求才会走这个路由。为一个数组，每个规则为并且的关系
          predicates:
              ### 1. name：规则名称，目前有10个，有Path，Query，Method，Header，After，Before，Between，Cookie，Host，RemoteAddr
              ### 2. args：参数key-value键值对
          - Path=${gate-way-prefix}/cashier/**
          ### 请求转发前的filter，为一个数组
          filters:
          - StripPrefix=3
          - name: RequestRateLimiter
            args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                key-resolver: '#{@ipKeyResolver}'

         # Websocket route
        - id: websocket_route
          uri: lb:ws://fnb-cashier
          predicates:
          - Path=${gate-way-prefix}/cashier/**
          filters:
          - StripPrefix=4

        - id: admin
          uri: lb://fnb-admin
          predicates:
          - Path=${gate-way-prefix}/admin/**
          filters:
          - StripPrefix=3
          - name: RequestRateLimiter
            args:
              redis-rate-limiter.replenishRate: 10
              redis-rate-limiter.burstCapacity: 20
              key-resolver: '#{@ipKeyResolver}'

        - id: shop
          uri: lb://fnb-shopmgr
          predicates:
          - Path=${gate-way-prefix}/shop/**
          filters:
          - StripPrefix=3
          - name: RequestRateLimiter
            args:
              redis-rate-limiter.replenishRate: 10
              redis-rate-limiter.burstCapacity: 20
              key-resolver: '#{@ipKeyResolver}'

        - id: payment
          uri: lb://msa-payment
          predicates:
          - Path=${gate-way-prefix}/payment/**
          filters:
          - StripPrefix=3
          - name: RequestRateLimiter
            args:
              redis-rate-limiter.replenishRate: 10
              redis-rate-limiter.burstCapacity: 20
              key-resolver: '#{@ipKeyResolver}'

        - id: crm
          uri: lb://msa-crm
          predicates:
          - Path=${gate-way-prefix}/crm/**
          filters:
          - StripPrefix=3
          - name: RequestRateLimiter
            args:
              redis-rate-limiter.replenishRate: 10
              redis-rate-limiter.burstCapacity: 20
              key-resolver: '#{@ipKeyResolver}'

        - id: sms
          uri: lb://webservice-sms
          predicates:
          - Path=${gate-way-prefix}/sms/**
          filters:
          - StripPrefix=3
          - name: RequestRateLimiter
            args:
              redis-rate-limiter.replenishRate: 10
              redis-rate-limiter.burstCapacity: 20
              key-resolver: '#{@ipKeyResolver}'
        
###注册到注册中心
eureka:
  instance:
        statusPageUrlPath: /info
        healthCheckUrlPath: /health
        # docker 部署开启
        # true-注册时使用ip  false - 主机名
        prefer-ip-address: ${PREFER_IP_ADDRESS:true}
        # 指定此实例的ip
        ip-address: ${IP_ADDRESS:127.0.0.1}
  client:
    serviceUrl:
        # defaultZone: http://${REGISTRY_NAME:beyondSoft}:${REGISTRY_PASS:beyondSoft2018.com}@${EUREKA_HOST:localhost}:${EUREKA_PORT:8761}/eureka/
        defaultZone: http://localhost:${EUREKA_PORT:8761}/eureka/


feign: 
  hystrix:
    enabled: true
  ###开启压缩      
  client:
    config:
       #服务名，填写default为所有服务
      default:       
        # 连接时间   
        connectTimeout: 5000
        # 超时时间
        readTimeout: 5000
        loggerLevel: basic
  httpclient:
    enabled: false
  okhttp:
    enabled: true
  compression:
    request: 
      enabled: true 
      ###配置压缩文档类型及最小压缩的文档大小
      mime-types: text/xml,application/xml,application/json
      min-request-size: 2048
    response:
      enabled: true

# 熔断器设置 HystrixCommandProperties
hystrix:
  threadpool:
    default:
      # 并发执行的最大线程数，默认10
      coreSize: 10
      # BlockingQueue的最大队列数
      maxQueueSize: 1000
      # 即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝
      queueSizeRejectionThreshold: 500
  command:
    default:
      # 是否开启通过请求缓存提供去重复数据功能。 默认为true
      requestCache:
        enabled: false
      execution:
        isolation:
          thread:
          #设置超时熔断时间
            timeoutInMilliseconds: 3000
          strategy: SEMAPHORE

##开启所有端点
management:
    endpoint:
        health:
            show-details: always
        gateway:
            enabled: true
    endpoints:
        web:
            exposure:
                include: '*'
